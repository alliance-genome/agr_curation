name: PR validation
on:
  pull_request:
    types: [synchronize, opened, reopened, edited]
    branches:
      - alpha
      - beta
      - production
jobs:
  check-branching-rules:
    if: github.event.action != 'edited' || github.event.changes.base
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: cp src/main/resources/application.properties.defaults src/main/resources/application.properties
      - name: Check branching rules
        run: |
          bash ci-scripts/check-branching.sh ${{ github.base_ref }} ${{ github.head_ref }}
  verify-test-api:
    if: github.event.action != 'edited' || github.event.changes.base
    runs-on: ubuntu-20.04
    steps:
      - name: Report workflow details
        run: |
          echo "Repository ${{ github.repository }}."
          echo "Trigger ref ${{ github.ref }}, base-ref ${{ github.base_ref }}, head_ref ${{ github.head_ref }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: cp src/main/resources/application.properties.defaults src/main/resources/application.properties
      - name: Report files updated in PR
        run: |
          git fetch -q origin ${{ github.base_ref }} ${{ github.head_ref }}
          git diff --name-only origin/${{ github.base_ref }} origin/${{ github.head_ref }}
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Report runtime details
        run: |
          echo "Github runner OS: ${{ runner.os }}"
      - name: Report Maven version
        run: |
          mvn --version
      - name: Run Maven test
        run: |
          mvn --no-transfer-progress test
      - name: Run Maven verify
        run: |
          mvn --no-transfer-progress --batch-mode --update-snapshots verify
      - name: Package API
        run: |
          mvn clean package -Dquarkus.package.type=uber-jar -ntp
      - name: Run Integration tests
        run: |
          make integration-test

  test-build-docker-image:
      if: github.event.action != 'edited' || github.event.changes.base
      runs-on: ubuntu-20.04
      steps:
        - name: Check out repository code
          uses: actions/checkout@v2
        - run: cp src/main/resources/application.properties.defaults src/main/resources/application.properties
        - name: Build docker image
          env:
            ECR_REPOSITORY: agr_curation
            IMAGE_TAG: ${{ github.sha }}
          run: docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
